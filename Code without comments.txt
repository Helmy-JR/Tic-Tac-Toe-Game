import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class TicTacToeGUI {
    private JFrame frame;
    private JButton[][] buttons;
    private JLabel statusLabel;
    private JLabel playerXWinsLabel;
    private JLabel playerOWinsLabel;
    private String currentPlayer;
    private boolean gameOver;
    private JButton restartButton;
    private int playerXWins;
    private int playerOWins;

    public TicTacToeGUI() {
        frame = new JFrame("Tic Tac Toe");
        buttons = new JButton[3][3];
        currentPlayer = "X";
        gameOver = false;
        playerXWins = 0;
        playerOWins = 0;

        JPanel gridPanel = new JPanel(new GridLayout(3, 3));
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                buttons[row][col] = new JButton();
                buttons[row][col].setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 100));
                final int r = row;
                final int c = col;
                buttons[row][col].addActionListener(e -> buttonClicked(r, c));
                gridPanel.add(buttons[row][col]);
            }
        }

        restartButton = new JButton("Restart");
        restartButton.addActionListener(e -> restartGame());

        statusLabel = new JLabel("Current player: " + currentPlayer);
        playerXWinsLabel = new JLabel("Player X wins: " + playerXWins);
        playerOWinsLabel = new JLabel("Player O wins: " + playerOWins);

        JPanel bottomPanel = new JPanel(new FlowLayout());
        bottomPanel.add(statusLabel);
        bottomPanel.add(restartButton);
        bottomPanel.add(playerXWinsLabel);
        bottomPanel.add(playerOWinsLabel);

        frame.add(gridPanel, BorderLayout.CENTER);
        frame.add(bottomPanel, BorderLayout.SOUTH);

        frame.setSize(400, 300);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

    private void buttonClicked(int row, int col) {
        if (!gameOver && buttons[row][col].getText().equals("")) {
            buttons[row][col].setText(currentPlayer);
            if (checkWin(row, col)) {
                statusLabel.setText("Player " + currentPlayer + " wins!");
                if (currentPlayer.equals("X")) {
                    playerXWins++;
                    playerXWinsLabel.setText("Player X wins: " + playerXWins);
                } else {
                    playerOWins++;
                    playerOWinsLabel.setText("Player O wins: " + playerOWins);
                }
                gameOver = true;
            } else if (checkDraw()) {
                statusLabel.setText("It's a draw!");
                gameOver = true;
            } else {
                currentPlayer = (currentPlayer.equals("X")) ? "O" : "X";
                statusLabel.setText("Current player: " + currentPlayer);
            }
        }
    }

    private boolean checkWin(int row, int col) {
        String symbol = buttons[row][col].getText();
        return (buttons[row][(col + 1) % 3].getText().equals(symbol) && buttons[row][(col + 2) % 3].getText().equals(symbol)) ||
                (buttons[(row + 1) % 3][col].getText().equals(symbol) && buttons[(row + 2) % 3][col].getText().equals(symbol)) ||
                (row == col && buttons[(row + 1) % 3][(col + 1) % 3].getText().equals(symbol) && buttons[(row + 2) % 3][(col + 2) % 3].getText().equals(symbol)) ||
                (row + col == 2 && buttons[(row + 1) % 3][(col + 2) % 3].getText().equals(symbol) && buttons[(row + 2) % 3][(col + 1) % 3].getText().equals(symbol));
    }

    private boolean checkDraw() {
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                if (buttons[row][col].getText().equals("")) {
                    return false;
                }
            }
        }
        return true;
    }

    private void restartGame() {
        for (int row = 0; row < 3; row++) {
            for (int col = 0; col < 3; col++) {
                buttons[row][col].setText("");
            }
        }
        currentPlayer = "X";
        statusLabel.setText("Current player: " + currentPlayer);
        gameOver = false;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(TicTacToeGUI::new);
    }
}
